!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/h/snippets/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
ATHENA	inc/common.h	/^#define ATHENA /;"	d
Athena	inc/Athena.h	/^class Athena {$/;"	c
Athena	inc/Athena.h	/^inline Athena::Athena()$/;"	f	class:Athena
CElapsedTime	inc/Elapsedtime.h	/^        explicit CElapsedTime(const std::string& s): id(s), start_time(clock()), end_time(clock(/;"	f	class:CElapsedTime
CElapsedTime	inc/Elapsedtime.h	/^class CElapsedTime {$/;"	c
EXPRESSION	inc/common.h	/^#define EXPRESSION(/;"	d
INCLUDE_DIR	CMakeLists.txt	/^set(INCLUDE_DIR ".\/inc")$/;"	v
NonCopyable	inc/noncopyable.h	/^    class NonCopyable {$/;"	c	namespace:Snippets
PP_ARG_N	inc/common.h	/^#define PP_ARG_N(/;"	d
PP_NARG	inc/common.h	/^#define PP_NARG(/;"	d
PP_NARG_	inc/common.h	/^#define PP_NARG_(/;"	d
PP_RSEQ_N	inc/common.h	/^#define PP_RSEQ_N(/;"	d
STDOUT	inc/common.h	/^#define STDOUT(/;"	d
STRINGIFY	inc/common.h	/^#define STRINGIFY(/;"	d
Singleton	inc/singleton.h	/^            Singleton() {}$/;"	f	class:Snippets::Singleton
Singleton	inc/singleton.h	/^    class Singleton: public NonCopyable {$/;"	c	namespace:Snippets
Snippets	inc/noncopyable.h	/^namespace Snippets {$/;"	n
Snippets	inc/singleton.h	/^namespace Snippets {$/;"	n
THREAD_POOL_H	inc/Athena.h	/^#define THREAD_POOL_H$/;"	d
TRACE	inc/common.h	/^#define TRACE(/;"	d
__COMMON_H__	inc/common.h	/^#define __COMMON_H__$/;"	d
__NONCOPYABLE_H__	inc/noncopyable.h	/^#define __NONCOPYABLE_H__$/;"	d
__NONCOPYABLE_H__	inc/singleton.h	/^#define __NONCOPYABLE_H__$/;"	d
__anon854d87b50102	inc/Athena.h	/^            {$/;"	f	function:Athena::Athena	file:
__anon854d87b50202	inc/Athena.h	/^                            [this]{ return this->stop || !this->tasks.empty(); });$/;"	f	function:Athena::Athena::__anon854d87b50102	file:
__anon854d87b50302	inc/Athena.h	/^        tasks.emplace([task](){ (*task)(); });$/;"	f	function:Athena::enqueue	file:
check	inc/Elapsedtime.h	/^        void check(const std::string& func, int l) {$/;"	f	class:CElapsedTime	typeref:typename:void
condition	inc/Athena.h	/^    std::condition_variable condition;$/;"	m	class:Athena	typeref:typename:std::condition_variable
decimal_to_hexadecimal	src/decimal_to_hexdecimal.cpp	/^std::string decimal_to_hexadecimal(int n) {$/;"	f	typeref:typename:std::string
end_time	inc/Elapsedtime.h	/^        clock_t start_time, end_time;$/;"	m	class:CElapsedTime	typeref:typename:clock_t
enqueue	inc/Athena.h	/^auto Athena::enqueue(F&& f, Args&&... args) $/;"	f	class:Athena	typeref:typename:std::future<typename std::result_of<F (Args...)>::type>
getAddress	src/address.cpp	/^string getAddress(const void *p) {$/;"	f	typeref:typename:string
getInstance	inc/Athena.h	/^    static Athena* getInstance()$/;"	f	class:Athena	typeref:typename:Athena *
getInstance	inc/singleton.h	/^            static Singleton& getInstance() {$/;"	f	class:Snippets::Singleton	typeref:typename:Singleton &
id	inc/Elapsedtime.h	/^        std::string id;$/;"	m	class:CElapsedTime	typeref:typename:std::string
main	src/Athena.cpp	/^int main() {$/;"	f	typeref:typename:int
poll_state	src/time_operation.cpp	/^int poll_state(bool *p, int timeout \/*ms*\/) {$/;"	f	typeref:typename:int
printStackTrace	src/stack_trace.cpp	/^#define printStackTrace(/;"	d	file:
queue_mutex	inc/Athena.h	/^    std::mutex queue_mutex;$/;"	m	class:Athena	typeref:typename:std::mutex
ref	README.md	/^# ref$/;"	c
return_type	inc/Athena.h	/^    using return_type = typename std::result_of<F(Args...)>::type;$/;"	t	function:Athena::enqueue
snippets	CMakeLists.txt	/^project(snippets)$/;"	p
snippets	README.md	/^# snippets$/;"	c
start_time	inc/Elapsedtime.h	/^        clock_t start_time, end_time;$/;"	m	class:CElapsedTime	typeref:typename:clock_t
stop	inc/Athena.h	/^    bool stop;$/;"	m	class:Athena	typeref:typename:bool
tasks	inc/Athena.h	/^    std::queue< std::function<void()> > tasks;$/;"	m	class:Athena	typeref:typename:std::queue<std::function<void ()>>
test	CMakeLists.txt	/^add_executable(test ${SRCS})$/;"	t
test_PP_NARG	src/misc.cpp	/^int test_PP_NARG() {$/;"	f	typeref:typename:int
test_bt	src/stack_trace.cpp	/^int test_bt() {$/;"	f	typeref:typename:int
test_dec_hex	src/decimal_to_hexdecimal.cpp	/^int test_dec_hex() {$/;"	f	typeref:typename:int
test_getAddress	src/address.cpp	/^int test_getAddress() {$/;"	f	typeref:typename:int
test_poll_state	src/time_operation.cpp	/^int test_poll_state() {$/;"	f	typeref:typename:int
test_thread_id	src/thread_id.cpp	/^int test_thread_id() {$/;"	f	typeref:typename:int
test_write_bin_file	src/file_operation.cpp	/^int test_write_bin_file() {$/;"	f	typeref:typename:int
workers	inc/Athena.h	/^    std::vector< std::thread > workers;$/;"	m	class:Athena	typeref:typename:std::vector<std::thread>
write_bin_file	src/file_operation.cpp	/^void write_bin_file(const std::string bin_file_name, const char* p, size_t len) {$/;"	f	typeref:typename:void
~Athena	inc/Athena.h	/^inline Athena::~Athena()$/;"	f	class:Athena
~CElapsedTime	inc/Elapsedtime.h	/^        ~CElapsedTime() {$/;"	f	class:CElapsedTime
